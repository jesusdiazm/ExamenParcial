import pygame
import random
from config import *
from astar import *
from mapa import PASILLO  # Añadir esta línea

class Guardia(pygame.sprite.Sprite):
    def __init__(self, posicion_inicial):
        super().__init__()
        self.image = pygame.Surface((TAM_GUARDIA, TAM_GUARDIA))
        self.image.fill(ROJO)
        self.rect = self.image.get_rect()
        self.rect.center = posicion_inicial
        self.direccion = random.choice(['izquierda', 'derecha', 'arriba', 'abajo'])
        self.velocidad = 100  # Velocidad en píxeles por segundo
        self.tiempo_anterior = pygame.time.get_ticks()

    def update(self, ladron, mapa, celda_ancho, celda_alto, delta_time):
        if self.ver_ladron(ladron):
            path = a_star(self.rect.center, ladron.rect.center, mapa, celda_ancho, celda_alto)
            if path and len(path) > 1:
                next_pos = path[1]  # La siguiente posición en el camino A*
                self.mover_hacia(next_pos, delta_time)
        else:
            self.mover_aleatorio(mapa, celda_ancho, celda_alto, delta_time)

    def ver_ladron(self, ladron):
        distancia = ((self.rect.x - ladron.rect.x) ** 2 + (self.rect.y - ladron.rect.y) ** 2) ** 0.5
        return distancia < 100

    def mover_hacia(self, destino, delta_time):
        dx, dy = destino[0] - self.rect.centerx, destino[1] - self.rect.centery
        distancia = (dx ** 2 + dy ** 2) ** 0.5

        if distancia > 0:
            direccion_x = dx / distancia
            direccion_y = dy / distancia
            desplazamiento_x = direccion_x * self.velocidad * delta_time
            desplazamiento_y = direccion_y * self.velocidad * delta_time

            self.rect.x += int(desplazamiento_x)
            self.rect.y += int(desplazamiento_y)

    def mover_aleatorio(self, mapa, celda_ancho, celda_alto, delta_time):
        desplazamiento_x, desplazamiento_y = 0, 0
        if self.direccion == 'izquierda':
            desplazamiento_x = -self.velocidad * delta_time
        elif self.direccion == 'derecha':
            desplazamiento_x = self.velocidad * delta_time
        elif self.direccion == 'arriba':
            desplazamiento_y = -self.velocidad * delta_time
        elif self.direccion == 'abajo':
            desplazamiento_y = self.velocidad * delta_time

        nueva_pos_x = self.rect.x + desplazamiento_x
        nueva_pos_y = self.rect.y + desplazamiento_y
        x = int(nueva_pos_x // celda_ancho)
        y = int(nueva_pos_y // celda_alto)

        if 0 <= x < len(mapa[0]) and 0 <= y < len(mapa) and mapa[y][x] == PASILLO:
            self.rect.x = nueva_pos_x
            self.rect.y = nueva_pos_y
        else:
            self.direccion = random.choice(['izquierda', 'derecha', 'arriba', 'abajo'])